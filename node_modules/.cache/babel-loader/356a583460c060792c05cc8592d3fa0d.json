{"ast":null,"code":"var _jsxFileName = \"/Users/snasi/QuickStart/fridge-friend/fridge-friend/src/components/ReportArea/ReportArea.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReportArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedMeals: []\n    };\n    this.handleReportCheckboxChange = this.handleReportCheckboxChange.bind(this);\n  }\n\n  handleReportCheckboxChange(e, meal) {\n    this.setState(prevState => {\n      let checkedMeals = prevState.checkedMeals;\n\n      if (checkedMeals.indexOf(meal) === -1) {\n        checkedMeals = checkedMeals.concat(this.state.checkedMeals[meal].ingredients);\n      } else {\n        checkedMeals.splice(checkedMeals.indexOf(meal), 1);\n      }\n\n      return {\n        checkedMeals: checkedMeals\n      };\n    });\n  }\n\n  getUniqueListOfIngredients() {\n    let result = [];\n\n    for (let meal in this.state.checkedMeals) {\n      if (result.indexOf(meal) === -1) {\n        result = result.concat(this.state.checkedMeals[meal].ingredients);\n      } else {\n        result.splice(result.indexOf(meal), 1);\n      }\n    }\n\n    result.sort();\n    return [...new Set(result)];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Report Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Check what you want to eat this week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: this.props.meals.map((meal, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"checkbox-no-break\",\n            onChange: e => this.handleReportCheckboxChange(e, meal),\n            name: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: index,\n            children: meal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-default\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"My Groceries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: this.getUniqueListOfIngredients().map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ingredient\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ReportArea;","map":{"version":3,"sources":["/Users/snasi/QuickStart/fridge-friend/fridge-friend/src/components/ReportArea/ReportArea.js"],"names":["React","Component","ReportArea","constructor","props","state","checkedMeals","handleReportCheckboxChange","bind","e","meal","setState","prevState","indexOf","concat","ingredients","splice","getUniqueListOfIngredients","result","sort","Set","render","meals","map","index","name","ingredient"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass ReportArea extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            checkedMeals: []\n        }\n        this.handleReportCheckboxChange = this.handleReportCheckboxChange.bind(this)\n    }\n\n    handleReportCheckboxChange(e, meal) {\n        this.setState((prevState) => {\n            let checkedMeals = prevState.checkedMeals\n\n            if (checkedMeals.indexOf(meal) === -1) {\n                checkedMeals = checkedMeals.concat(this.state.checkedMeals[meal].ingredients)\n            } else {\n                checkedMeals.splice(checkedMeals.indexOf(meal), 1)\n            }\n            \n            return { \n                checkedMeals: checkedMeals\n            };\n        });\n    }\n\n    getUniqueListOfIngredients() {\n        let result = []\n\n        for (let meal in this.state.checkedMeals) {\n            if (result.indexOf(meal) === -1) {\n                result = result.concat(this.state.checkedMeals[meal].ingredients)\n            } else {\n                result.splice(result.indexOf(meal), 1)\n            }\n            \n        }\n\n        result.sort()\n\n        return [...new Set(result)]\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Report Area</h1>\n                <h2>Check what you want to eat this week</h2>\n                <form> \n                    {this.props.meals.map((meal, index) => (\n                        <span key={index}>\n                            <input\n                                type=\"checkbox\"\n                                className=\"checkbox-no-break\"\n                                onChange={(e) => this.handleReportCheckboxChange(e, meal)} \n                                name={index}\n                            />\n\n                            <label htmlFor={index}>{meal.name}</label>\n                        </span>\n                    ))}\n                </form>\n\n                <div className=\"card card-default\">\n                    <div className=\"card-header\">My Groceries</div>\n                    <div className=\"card-body\">\n                    {this.getUniqueListOfIngredients().map((ingredient, index) => (\n                        <p key={index}>{ingredient}</p>\n                    ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ReportArea"]},"metadata":{},"sourceType":"module"}